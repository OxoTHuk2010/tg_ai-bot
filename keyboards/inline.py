from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from storage import PERSONS

def start_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üé≤ –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç', callback_data='ramdom_fact')],
        [InlineKeyboardButton(text='üë• –û–±—â–µ–Ω–∏–µ —Å –ª–∏—á–Ω–æ—Å—Ç—å—é', callback_data='person_talk')],
        [InlineKeyboardButton(text='üß† –ö–≤–∏–∑', callback_data='quiz')],
        [InlineKeyboardButton(text='üåè –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫', callback_data='translate')],
        [InlineKeyboardButton(text='üé• –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏', callback_data='recommendations')],
        [InlineKeyboardButton(text='üíº –ü–æ–º–æ—â—å —Å —Ä–µ–∑—é–º–µ', callback_data='resume')],
    ])

def fact_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üé≤ –•–æ—á—É –µ—â—ë —Ñ–∞–∫—Ç', callback_data='ramdom_fact')],
        [InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å', callback_data="close_to_start")],
    ])

def get_persons_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=name, callback_data=f'persona:{name}')] for name in PERSONS]
        )


def close_mode():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å', callback_data='close_to_start')]
    ])

def get_qviz_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ò—Å—Ç–æ—Ä–∏—è', callback_data='topic:history')],
        [InlineKeyboardButton(text='–ù–∞—É–∫–∞', callback_data='topic:science')],
        [InlineKeyboardButton(text='IT', callback_data='topic:it')],
        [InlineKeyboardButton(text='–ö–∏–Ω–æ', callback_data='topic:cinema')],
        [InlineKeyboardButton(text='–ö–Ω–∏–≥–∏', callback_data='topic:book')],
    ])

def quiz_answers():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ï—â—ë –≤–æ–ø—Ä–æ—Å –ø–æ —Ç–µ–º–µ', callback_data='next_question')],
        [InlineKeyboardButton(text='–°–º–µ–Ω–∞ —Ç–µ–º—ã', callback_data='change_topic')],
        [InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É', callback_data='end_quiz')],
    ])

def translate_lang_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", callback_data="lang:–∞–Ω–≥–ª–∏–π—Å–∫–∏–π")],
        [InlineKeyboardButton(text="–ù–µ–º–µ—Ü–∫–∏–π", callback_data="lang:–Ω–µ–º–µ—Ü–∫–∏–π")],
        [InlineKeyboardButton(text="–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π", callback_data="lang:—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π")],
        [InlineKeyboardButton(text="–ò—Å–ø–∞–Ω—Å–∫–∏–π", callback_data="lang:–∏—Å–ø–∞–Ω—Å–∫–∏–π")],
        [InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π", callback_data="lang:—Ä—É—Å—Å–∫–∏–π")],
    ])

def translate_action_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", callback_data="translate_change_lang")],
        [InlineKeyboardButton(text="–ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="close_to_start")],
    ])

def reco_category_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–§–∏–ª—å–º—ã", callback_data="reco_cat:films")],
        [InlineKeyboardButton(text="–ö–Ω–∏–≥–∏", callback_data="reco_cat:books")],
        [InlineKeyboardButton(text="–ú—É–∑—ã–∫–∞", callback_data="reco_cat:music")],
    ])

def reco_items_keyboard(items):
    """
    items: —Å–ø–∏—Å–æ–∫ dict —Å –∫–ª—é—á–æ–º 'title'. –ö–Ω–æ–ø–∫–∏ "üëé 1. <—Å–æ–∫—Ä.–Ω–∞–∑–≤–∞–Ω–∏–µ>"
    callback_data: 'reco_dislike:<idx>'
    """
    rows = []
    for i, item in enumerate(items, 1):
        title = item.get("title", f"#{i}")
        short = (title[:28] + "‚Ä¶") if len(title) > 29 else title
        rows.append([InlineKeyboardButton(text=f"üëé {i}. {short}", callback_data=f"reco_dislike:{i}")])
    rows.append([InlineKeyboardButton(text="–ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="close_to_start")])
    return InlineKeyboardMarkup(inline_keyboard=rows)